function f(e,n,r){function o(u,c){var a;Object.defineProperty(u,"_zod",{value:u._zod??{},enumerable:!1}),(a=u._zod).traits??(a.traits=new Set),u._zod.traits.add(e),n(u,c);for(const l in s.prototype)l in u||Object.defineProperty(u,l,{value:s.prototype[l].bind(u)});u._zod.constr=s,u._zod.def=c}const t=r?.Parent??Object;class i extends t{}Object.defineProperty(i,"name",{value:e});function s(u){var c;const a=r?.Parent?new i:this;o(a,u),(c=a._zod).deferred??(c.deferred=[]);for(const l of a._zod.deferred)l();return a}return Object.defineProperty(s,"init",{value:o}),Object.defineProperty(s,Symbol.hasInstance,{value:u=>r?.Parent&&u instanceof r.Parent?!0:u?._zod?.traits?.has(e)}),Object.defineProperty(s,"name",{value:e}),s}class g extends Error{constructor(){super("Encountered Promise during synchronous parse. Use .parseAsync() instead.")}}class W extends Error{constructor(n){super(`Encountered unidirectional transform during encode: ${n}`),this.name="ZodEncodeError"}}const G={};function w(e){return G}function J(e){const n=Object.values(e).filter(o=>typeof o=="number");return Object.entries(e).filter(([o,t])=>n.indexOf(+o)===-1).map(([o,t])=>t)}function q(e,n){return typeof n=="bigint"?n.toString():n}function x(e){return{get value(){{const n=e();return Object.defineProperty(this,"value",{value:n}),n}}}}function T(e){const n=e.startsWith("^")?1:0,r=e.endsWith("$")?e.length-1:e.length;return e.slice(n,r)}const R=Symbol("evaluating");function d(e,n,r){let o;Object.defineProperty(e,n,{get(){if(o!==R)return o===void 0&&(o=R,o=r()),o},set(t){Object.defineProperty(e,n,{value:t})},configurable:!0})}function M(e,n,r){Object.defineProperty(e,n,{value:r,writable:!0,enumerable:!0,configurable:!0})}function D(...e){const n={};for(const r of e){const o=Object.getOwnPropertyDescriptors(r);Object.assign(n,o)}return Object.defineProperties({},n)}const L="captureStackTrace"in Error?Error.captureStackTrace:(...e)=>{};function j(e){return typeof e=="object"&&e!==null&&!Array.isArray(e)}function V(e){if(j(e)===!1)return!1;const n=e.constructor;if(n===void 0)return!0;const r=n.prototype;return!(j(r)===!1||Object.prototype.hasOwnProperty.call(r,"isPrototypeOf")===!1)}function H(e){return V(e)?{...e}:e}const Q=new Set(["string","number","symbol"]);function S(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function A(e,n,r){const o=new e._zod.constr(n??e._zod.def);return(!n||r?.parent)&&(o._zod.parent=e),o}function z(e){return{}}function X(e){return Object.keys(e).filter(n=>e[n]._zod.optin==="optional"&&e[n]._zod.optout==="optional")}function Y(e,n){const r=e._zod.def,o=D(e._zod.def,{get shape(){const t={};for(const i in n){if(!(i in r.shape))throw new Error(`Unrecognized key: "${i}"`);n[i]&&(t[i]=r.shape[i])}return M(this,"shape",t),t},checks:[]});return A(e,o)}function ee(e,n){if(!V(n))throw new Error("Invalid input to extend: expected a plain object");const r=e._zod.def.checks;if(r&&r.length>0)throw new Error("Object schemas containing refinements cannot be extended. Use `.safeExtend()` instead.");const t=D(e._zod.def,{get shape(){const i={...e._zod.def.shape,...n};return M(this,"shape",i),i},checks:[]});return A(e,t)}function b(e,n=0){if(e.aborted===!0)return!0;for(let r=n;r<e.issues.length;r++)if(e.issues[r]?.continue!==!0)return!0;return!1}function N(e,n){return n.map(r=>{var o;return(o=r).path??(o.path=[]),r.path.unshift(e),r})}function $(e){return typeof e=="string"?e:e?.message}function y(e,n,r){const o={...e,path:e.path??[]};if(!e.message){const t=$(e.inst?._zod.def?.error?.(e))??$(n?.error?.(e))??$(r.customError?.(e))??$(r.localeError?.(e))??"Invalid input";o.message=t}return delete o.inst,delete o.continue,n?.reportInput||delete o.input,o}const B=(e,n)=>{e.name="$ZodError",Object.defineProperty(e,"_zod",{value:e._zod,enumerable:!1}),Object.defineProperty(e,"issues",{value:n,enumerable:!1}),e.message=JSON.stringify(n,q,2),Object.defineProperty(e,"toString",{value:()=>e.message,enumerable:!1})},ne=f("$ZodError",B),E=f("$ZodError",B,{Parent:Error}),re=e=>(n,r,o,t)=>{const i=o?Object.assign(o,{async:!1}):{async:!1},s=n._zod.run({value:r,issues:[]},i);if(s instanceof Promise)throw new g;if(s.issues.length){const u=new(t?.Err??e)(s.issues.map(c=>y(c,i,w())));throw L(u,t?.callee),u}return s.value},te=re(E),oe=e=>async(n,r,o,t)=>{const i=o?Object.assign(o,{async:!0}):{async:!0};let s=n._zod.run({value:r,issues:[]},i);if(s instanceof Promise&&(s=await s),s.issues.length){const u=new(t?.Err??e)(s.issues.map(c=>y(c,i,w())));throw L(u,t?.callee),u}return s.value},se=oe(E),ie=e=>(n,r,o)=>{const t=o?{...o,async:!1}:{async:!1},i=n._zod.run({value:r,issues:[]},t);if(i instanceof Promise)throw new g;return i.issues.length?{success:!1,error:new(e??ne)(i.issues.map(s=>y(s,t,w())))}:{success:!0,data:i.value}},K=ie(E),ue=e=>async(n,r,o)=>{const t=o?Object.assign(o,{async:!0}):{async:!0};let i=n._zod.run({value:r,issues:[]},t);return i instanceof Promise&&(i=await i),i.issues.length?{success:!1,error:new e(i.issues.map(s=>y(s,t,w())))}:{success:!0,data:i.value}},F=ue(E),ce=e=>{const n=e?`[\\s\\S]{${e?.minimum??0},${e?.maximum??""}}`:"[\\s\\S]*";return new RegExp(`^${n}$`)},ae=/^-?\d+(?:\.\d+)?/i,le=/true|false/i,fe={major:4,minor:1,patch:4},h=f("$ZodType",(e,n)=>{var r;e??(e={}),e._zod.def=n,e._zod.bag=e._zod.bag||{},e._zod.version=fe;const o=[...e._zod.def.checks??[]];e._zod.traits.has("$ZodCheck")&&o.unshift(e);for(const t of o)for(const i of t._zod.onattach)i(e);if(o.length===0)(r=e._zod).deferred??(r.deferred=[]),e._zod.deferred?.push(()=>{e._zod.run=e._zod.parse});else{const t=(s,u,c)=>{let a=b(s),l;for(const p of u){if(p._zod.def.when){if(!p._zod.def.when(s))continue}else if(a)continue;const m=s.issues.length,v=p._zod.check(s);if(v instanceof Promise&&c?.async===!1)throw new g;if(l||v instanceof Promise)l=(l??Promise.resolve()).then(async()=>{await v,s.issues.length!==m&&(a||(a=b(s,m)))});else{if(s.issues.length===m)continue;a||(a=b(s,m))}}return l?l.then(()=>s):s},i=(s,u,c)=>{if(b(s))return s.aborted=!0,s;const a=t(u,o,c);if(a instanceof Promise){if(c.async===!1)throw new g;return a.then(l=>e._zod.parse(l,c))}return e._zod.parse(a,c)};e._zod.run=(s,u)=>{if(u.skipChecks)return e._zod.parse(s,u);if(u.direction==="backward"){const a=e._zod.parse({value:s.value,issues:[]},{...u,skipChecks:!0});return a instanceof Promise?a.then(l=>i(l,s,u)):i(a,s,u)}const c=e._zod.parse(s,u);if(c instanceof Promise){if(u.async===!1)throw new g;return c.then(a=>t(a,o,u))}return t(c,o,u)}}e["~standard"]={validate:t=>{try{const i=K(e,t);return i.success?{value:i.data}:{issues:i.error?.issues}}catch{return F(e,t).then(s=>s.success?{value:s.data}:{issues:s.error?.issues})}},vendor:"zod",version:1}}),pe=f("$ZodString",(e,n)=>{h.init(e,n),e._zod.pattern=[...e?._zod.bag?.patterns??[]].pop()??ce(e._zod.bag),e._zod.parse=(r,o)=>{if(n.coerce)try{r.value=String(r.value)}catch{}return typeof r.value=="string"||r.issues.push({expected:"string",code:"invalid_type",input:r.value,inst:e}),r}}),de=f("$ZodNumber",(e,n)=>{h.init(e,n),e._zod.pattern=e._zod.bag.pattern??ae,e._zod.parse=(r,o)=>{if(n.coerce)try{r.value=Number(r.value)}catch{}const t=r.value;if(typeof t=="number"&&!Number.isNaN(t)&&Number.isFinite(t))return r;const i=typeof t=="number"?Number.isNaN(t)?"NaN":Number.isFinite(t)?void 0:"Infinity":void 0;return r.issues.push({expected:"number",code:"invalid_type",input:t,inst:e,...i?{received:i}:{}}),r}}),he=f("$ZodBoolean",(e,n)=>{h.init(e,n),e._zod.pattern=le,e._zod.parse=(r,o)=>{if(n.coerce)try{r.value=!!r.value}catch{}const t=r.value;return typeof t=="boolean"||r.issues.push({expected:"boolean",code:"invalid_type",input:t,inst:e}),r}});function U(e,n,r){e.issues.length&&n.issues.push(...N(r,e.issues)),n.value[r]=e.value}const _e=f("$ZodArray",(e,n)=>{h.init(e,n),e._zod.parse=(r,o)=>{const t=r.value;if(!Array.isArray(t))return r.issues.push({expected:"array",code:"invalid_type",input:t,inst:e}),r;r.value=Array(t.length);const i=[];for(let s=0;s<t.length;s++){const u=t[s],c=n.element._zod.run({value:u,issues:[]},o);c instanceof Promise?i.push(c.then(a=>U(a,r,s))):U(c,r,s)}return i.length?Promise.all(i).then(()=>r):r}});function k(e,n,r,o){e.issues.length&&n.issues.push(...N(r,e.issues)),e.value===void 0?r in o&&(n.value[r]=void 0):n.value[r]=e.value}function me(e){const n=Object.keys(e.shape);for(const o of n)if(!e.shape[o]._zod.traits.has("$ZodType"))throw new Error(`Invalid element at key "${o}": expected a Zod schema`);const r=X(e.shape);return{...e,keys:n,keySet:new Set(n),numKeys:n.length,optionalKeys:new Set(r)}}function ze(e,n,r,o,t,i){const s=[],u=t.keySet,c=t.catchall._zod,a=c.def.type;for(const l of Object.keys(n)){if(u.has(l))continue;if(a==="never"){s.push(l);continue}const p=c.run({value:n[l],issues:[]},o);p instanceof Promise?e.push(p.then(m=>k(m,r,l,n))):k(p,r,l,n)}return s.length&&r.issues.push({code:"unrecognized_keys",keys:s,input:n,inst:i}),e.length?Promise.all(e).then(()=>r):r}const ve=f("$ZodObject",(e,n)=>{h.init(e,n);const r=x(()=>me(n));d(e._zod,"propValues",()=>{const s=n.shape,u={};for(const c in s){const a=s[c]._zod;if(a.values){u[c]??(u[c]=new Set);for(const l of a.values)u[c].add(l)}}return u});const o=j,t=n.catchall;let i;e._zod.parse=(s,u)=>{i??(i=r.value);const c=s.value;if(!o(c))return s.issues.push({expected:"object",code:"invalid_type",input:c,inst:e}),s;s.value={};const a=[],l=i.shape;for(const p of i.keys){const v=l[p]._zod.run({value:c[p],issues:[]},u);v instanceof Promise?a.push(v.then(Z=>k(Z,s,p,c))):k(v,s,p,c)}return t?ze(a,c,s,u,r.value,e):a.length?Promise.all(a).then(()=>s):s}});function C(e,n,r,o){for(const i of e)if(i.issues.length===0)return n.value=i.value,n;const t=e.filter(i=>!b(i));return t.length===1?(n.value=t[0].value,t[0]):(n.issues.push({code:"invalid_union",input:n.value,inst:r,errors:e.map(i=>i.issues.map(s=>y(s,o,w())))}),n)}const ge=f("$ZodUnion",(e,n)=>{h.init(e,n),d(e._zod,"optin",()=>n.options.some(t=>t._zod.optin==="optional")?"optional":void 0),d(e._zod,"optout",()=>n.options.some(t=>t._zod.optout==="optional")?"optional":void 0),d(e._zod,"values",()=>{if(n.options.every(t=>t._zod.values))return new Set(n.options.flatMap(t=>Array.from(t._zod.values)))}),d(e._zod,"pattern",()=>{if(n.options.every(t=>t._zod.pattern)){const t=n.options.map(i=>i._zod.pattern);return new RegExp(`^(${t.map(i=>T(i.source)).join("|")})$`)}});const r=n.options.length===1,o=n.options[0]._zod.run;e._zod.parse=(t,i)=>{if(r)return o(t,i);let s=!1;const u=[];for(const c of n.options){const a=c._zod.run({value:t.value,issues:[]},i);if(a instanceof Promise)u.push(a),s=!0;else{if(a.issues.length===0)return a;u.push(a)}}return s?Promise.all(u).then(c=>C(c,t,e,i)):C(u,t,e,i)}}),be=f("$ZodDiscriminatedUnion",(e,n)=>{ge.init(e,n);const r=e._zod.parse;d(e._zod,"propValues",()=>{const t={};for(const i of n.options){const s=i._zod.propValues;if(!s||Object.keys(s).length===0)throw new Error(`Invalid discriminated union option at index "${n.options.indexOf(i)}"`);for(const[u,c]of Object.entries(s)){t[u]||(t[u]=new Set);for(const a of c)t[u].add(a)}}return t});const o=x(()=>{const t=n.options,i=new Map;for(const s of t){const u=s._zod.propValues?.[n.discriminator];if(!u||u.size===0)throw new Error(`Invalid discriminated union option at index "${n.options.indexOf(s)}"`);for(const c of u){if(i.has(c))throw new Error(`Duplicate discriminator value "${String(c)}"`);i.set(c,s)}}return i});e._zod.parse=(t,i)=>{const s=t.value;if(!j(s))return t.issues.push({code:"invalid_type",expected:"object",input:s,inst:e}),t;const u=o.value.get(s?.[n.discriminator]);return u?u._zod.run(t,i):n.unionFallback?r(t,i):(t.issues.push({code:"invalid_union",errors:[],note:"No matching discriminator",discriminator:n.discriminator,input:s,path:[n.discriminator],inst:e}),t)}}),we=f("$ZodTuple",(e,n)=>{h.init(e,n);const r=n.items,o=r.length-[...r].reverse().findIndex(t=>t._zod.optin!=="optional");e._zod.parse=(t,i)=>{const s=t.value;if(!Array.isArray(s))return t.issues.push({input:s,inst:e,expected:"tuple",code:"invalid_type"}),t;t.value=[];const u=[];if(!n.rest){const a=s.length>r.length,l=s.length<o-1;if(a||l)return t.issues.push({...a?{code:"too_big",maximum:r.length}:{code:"too_small",minimum:r.length},input:s,inst:e,origin:"array"}),t}let c=-1;for(const a of r){if(c++,c>=s.length&&c>=o)continue;const l=a._zod.run({value:s[c],issues:[]},i);l instanceof Promise?u.push(l.then(p=>P(p,t,c))):P(l,t,c)}if(n.rest){const a=s.slice(r.length);for(const l of a){c++;const p=n.rest._zod.run({value:l,issues:[]},i);p instanceof Promise?u.push(p.then(m=>P(m,t,c))):P(p,t,c)}}return u.length?Promise.all(u).then(()=>t):t}});function P(e,n,r){e.issues.length&&n.issues.push(...N(r,e.issues)),n.value[r]=e.value}const ye=f("$ZodEnum",(e,n)=>{h.init(e,n);const r=J(n.entries),o=new Set(r);e._zod.values=o,e._zod.pattern=new RegExp(`^(${r.filter(t=>Q.has(typeof t)).map(t=>typeof t=="string"?S(t):t.toString()).join("|")})$`),e._zod.parse=(t,i)=>{const s=t.value;return o.has(s)||t.issues.push({code:"invalid_value",values:r,input:s,inst:e}),t}}),Ze=f("$ZodLiteral",(e,n)=>{if(h.init(e,n),n.values.length===0)throw new Error("Cannot create literal schema with no valid values");e._zod.values=new Set(n.values),e._zod.pattern=new RegExp(`^(${n.values.map(r=>typeof r=="string"?S(r):r?S(r.toString()):String(r)).join("|")})$`),e._zod.parse=(r,o)=>{const t=r.value;return e._zod.values.has(t)||r.issues.push({code:"invalid_value",values:n.values,input:t,inst:e}),r}}),$e=f("$ZodTransform",(e,n)=>{h.init(e,n),e._zod.parse=(r,o)=>{if(o.direction==="backward")throw new W(e.constructor.name);const t=n.transform(r.value,r);if(o.async)return(t instanceof Promise?t:Promise.resolve(t)).then(s=>(r.value=s,r));if(t instanceof Promise)throw new g;return r.value=t,r}});function I(e,n){return e.issues.length&&n===void 0?{issues:[],value:void 0}:e}const Pe=f("$ZodOptional",(e,n)=>{h.init(e,n),e._zod.optin="optional",e._zod.optout="optional",d(e._zod,"values",()=>n.innerType._zod.values?new Set([...n.innerType._zod.values,void 0]):void 0),d(e._zod,"pattern",()=>{const r=n.innerType._zod.pattern;return r?new RegExp(`^(${T(r.source)})?$`):void 0}),e._zod.parse=(r,o)=>{if(n.innerType._zod.optin==="optional"){const t=n.innerType._zod.run(r,o);return t instanceof Promise?t.then(i=>I(i,r.value)):I(t,r.value)}return r.value===void 0?r:n.innerType._zod.run(r,o)}}),Oe=f("$ZodNullable",(e,n)=>{h.init(e,n),d(e._zod,"optin",()=>n.innerType._zod.optin),d(e._zod,"optout",()=>n.innerType._zod.optout),d(e._zod,"pattern",()=>{const r=n.innerType._zod.pattern;return r?new RegExp(`^(${T(r.source)}|null)$`):void 0}),d(e._zod,"values",()=>n.innerType._zod.values?new Set([...n.innerType._zod.values,null]):void 0),e._zod.parse=(r,o)=>r.value===null?r:n.innerType._zod.run(r,o)}),je=f("$ZodPrefault",(e,n)=>{h.init(e,n),e._zod.optin="optional",d(e._zod,"values",()=>n.innerType._zod.values),e._zod.parse=(r,o)=>(o.direction==="backward"||r.value===void 0&&(r.value=n.defaultValue),n.innerType._zod.run(r,o))}),ke=f("$ZodPipe",(e,n)=>{h.init(e,n),d(e._zod,"values",()=>n.in._zod.values),d(e._zod,"optin",()=>n.in._zod.optin),d(e._zod,"optout",()=>n.out._zod.optout),d(e._zod,"propValues",()=>n.in._zod.propValues),e._zod.parse=(r,o)=>{if(o.direction==="backward"){const i=n.out._zod.run(r,o);return i instanceof Promise?i.then(s=>O(s,n.in,o)):O(i,n.in,o)}const t=n.in._zod.run(r,o);return t instanceof Promise?t.then(i=>O(i,n.out,o)):O(t,n.out,o)}});function O(e,n,r){return e.issues.length?(e.aborted=!0,e):n._zod.run({value:e.value,issues:e.issues},r)}function Ee(e,n){return new e({type:"string",...z()})}function Se(e,n){return new e({type:"number",checks:[],...z()})}function Te(e,n){return new e({type:"boolean",...z()})}const _=f("ZodMiniType",(e,n)=>{if(!e._zod)throw new Error("Uninitialized schema in ZodMiniType.");h.init(e,n),e.def=n,e.type=n.type,e.parse=(r,o)=>te(e,r,o,{callee:e.parse}),e.safeParse=(r,o)=>K(e,r,o),e.parseAsync=async(r,o)=>se(e,r,o,{callee:e.parseAsync}),e.safeParseAsync=async(r,o)=>F(e,r,o),e.check=(...r)=>e.clone({...n,checks:[...n.checks??[],...r.map(o=>typeof o=="function"?{_zod:{check:o,def:{check:"custom"},onattach:[]}}:o)]}),e.clone=(r,o)=>A(e,r,o),e.brand=()=>e,e.register=((r,o)=>(r.add(e,o),e))}),Me=f("ZodMiniString",(e,n)=>{pe.init(e,n),_.init(e,n)});function We(e){return Ee(Me)}const Ae=f("ZodMiniNumber",(e,n)=>{de.init(e,n),_.init(e,n)});function Ge(e){return Se(Ae)}const Ne=f("ZodMiniBoolean",(e,n)=>{he.init(e,n),_.init(e,n)});function Je(e){return Te(Ne)}const Re=f("ZodMiniArray",(e,n)=>{_e.init(e,n),_.init(e,n)});function qe(e,n){return new Re({type:"array",element:e,...z()})}const Ue=f("ZodMiniObject",(e,n)=>{ve.init(e,n),_.init(e,n),d(e,"shape",()=>n.shape)});function He(e,n){const r={type:"object",get shape(){return M(this,"shape",{...e}),this.shape},...z()};return new Ue(r)}function Qe(e,n){return ee(e,n)}function Xe(e,n){return Y(e,n)}const Ce=f("ZodMiniDiscriminatedUnion",(e,n)=>{be.init(e,n),_.init(e,n)});function Ye(e,n,r){return new Ce({type:"union",options:n,discriminator:e,...z()})}const Ie=f("ZodMiniTuple",(e,n)=>{we.init(e,n),_.init(e,n)});function en(e,n,r){const t=n instanceof h?n:null;return new Ie({type:"tuple",items:e,rest:t,...z()})}const xe=f("ZodMiniEnum",(e,n)=>{ye.init(e,n),_.init(e,n),e.options=Object.values(n.entries)});function nn(e,n){const r=Array.isArray(e)?Object.fromEntries(e.map(o=>[o,o])):e;return new xe({type:"enum",entries:r,...z()})}const De=f("ZodMiniLiteral",(e,n)=>{Ze.init(e,n),_.init(e,n)});function rn(e,n){return new De({type:"literal",values:Array.isArray(e)?e:[e],...z()})}const Le=f("ZodMiniTransform",(e,n)=>{$e.init(e,n),_.init(e,n)});function tn(e){return new Le({type:"transform",transform:e})}const Ve=f("ZodMiniOptional",(e,n)=>{Pe.init(e,n),_.init(e,n)});function on(e){return new Ve({type:"optional",innerType:e})}const Be=f("ZodMiniNullable",(e,n)=>{Oe.init(e,n),_.init(e,n)});function sn(e){return new Be({type:"nullable",innerType:e})}const Ke=f("ZodMiniPrefault",(e,n)=>{je.init(e,n),_.init(e,n)});function un(e,n){return new Ke({type:"prefault",innerType:e,get defaultValue(){return typeof n=="function"?n():H(n)}})}const Fe=f("ZodMiniPipe",(e,n)=>{ke.init(e,n),_.init(e,n)});function cn(e,n){return new Fe({type:"pipe",in:e,out:n})}export{nn as _,qe as a,on as b,Je as c,Ye as d,sn as e,Qe as f,Xe as g,un as h,en as i,rn as l,Ge as n,He as o,cn as p,We as s,tn as t};
